package(default_visibility = ["//visibility:public"])

licenses(["notice"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_binary",
    "go_library",
    "go_test",
    "cgo_library",
)

go_library(
    name = "go_default_library",
    srcs = [
        "api_installer.go",
        "apiserver.go",
        "doc.go",
        "errors.go",
        "negotiate.go",
        "proxy.go",
        "resthandler.go",
        "serviceerror.go",
        "validator.go",
        "watch.go",
    ],
    tags = ["automanaged"],
    deps = [
        "//pkg/admission:go_default_library",
        "//pkg/api:go_default_library",
        "//pkg/api/errors:go_default_library",
        "//pkg/api/meta:go_default_library",
        "//pkg/api/rest:go_default_library",
        "//pkg/api/unversioned:go_default_library",
        "//pkg/apis/extensions:go_default_library",
        "//pkg/apiserver/metrics:go_default_library",
        "//pkg/apiserver/request:go_default_library",
        "//pkg/conversion:go_default_library",
        "//pkg/fields:go_default_library",
        "//pkg/httplog:go_default_library",
        "//pkg/probe:go_default_library",
        "//pkg/probe/http:go_default_library",
        "//pkg/runtime:go_default_library",
        "//pkg/runtime/serializer/streaming:go_default_library",
        "//pkg/storage:go_default_library",
        "//pkg/util:go_default_library",
        "//pkg/util/errors:go_default_library",
        "//pkg/util/flushwriter:go_default_library",
        "//pkg/util/httpstream:go_default_library",
        "//pkg/util/net:go_default_library",
        "//pkg/util/proxy:go_default_library",
        "//pkg/util/runtime:go_default_library",
        "//pkg/util/sets:go_default_library",
        "//pkg/util/strategicpatch:go_default_library",
        "//pkg/util/strings:go_default_library",
        "//pkg/util/wsstream:go_default_library",
        "//pkg/version:go_default_library",
        "//pkg/watch:go_default_library",
        "//pkg/watch/versioned:go_default_library",
        "//vendor:bitbucket.org/ww/goautoneg",
        "//vendor:github.com/emicklei/go-restful",
        "//vendor:github.com/evanphx/json-patch",
        "//vendor:github.com/golang/glog",
        "//vendor:golang.org/x/net/websocket",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "api_installer_test.go",
        "apiserver_test.go",
        "errors_test.go",
        "negotiate_test.go",
        "proxy_test.go",
        "resthandler_test.go",
        "validator_test.go",
        "watch_test.go",
    ],
    library = "go_default_library",
    tags = ["automanaged"],
    deps = [
        "//pkg/admission:go_default_library",
        "//pkg/api:go_default_library",
        "//pkg/api/errors:go_default_library",
        "//pkg/api/meta:go_default_library",
        "//pkg/api/rest:go_default_library",
        "//pkg/api/testapi:go_default_library",
        "//pkg/api/testing:go_default_library",
        "//pkg/api/unversioned:go_default_library",
        "//pkg/api/v1:go_default_library",
        "//pkg/apiserver/filters:go_default_library",
        "//pkg/apiserver/request:go_default_library",
        "//pkg/apiserver/testing:go_default_library",
        "//pkg/fields:go_default_library",
        "//pkg/labels:go_default_library",
        "//pkg/probe:go_default_library",
        "//pkg/runtime:go_default_library",
        "//pkg/runtime/serializer/streaming:go_default_library",
        "//pkg/types:go_default_library",
        "//pkg/util/diff:go_default_library",
        "//pkg/util/net:go_default_library",
        "//pkg/util/sets:go_default_library",
        "//pkg/util/strategicpatch:go_default_library",
        "//pkg/util/wait:go_default_library",
        "//pkg/watch:go_default_library",
        "//pkg/watch/versioned:go_default_library",
        "//plugin/pkg/admission/admit:go_default_library",
        "//plugin/pkg/admission/deny:go_default_library",
        "//vendor:github.com/emicklei/go-restful",
        "//vendor:github.com/evanphx/json-patch",
        "//vendor:golang.org/x/net/websocket",
    ],
)
